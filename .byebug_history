c
Account.new(account_params)
c
Account.new(account_params)
params
@account
q
debit.to_f > (Account.sum(:credit, :conditions => {:user_id => Thread.current[:user].id}) - Account.sum(:debit, :conditions => {:user_id => Thread.current[:user].id}))
debit > (Account.sum(:credit, :conditions => {:user_id => Thread.current[:user].id}) - Account.sum(:debit, :conditions => {:user_id => Thread.current[:user].id}))
debit.to_f
debit
(Account.sum(:credit, :conditions => {:user_id => Thread.current[:user].id}) - Account.sum(:debit, :conditions => {:user_id => Thread.current[:user].id}))
Thread.current[:user].id
q
value
c
q
@accounts.each{|x| p x[0]}
@accounts
@accounts = Account.start(params[:start]).end(params[:end]).userid(params[:customer]).pluck(:created_at, :credit, :debit)
Account.start(params[:start]).end(params[:end]).userid(params[:customer]).pluck(:created_at, :credit, :debit)
@accounts.pluck(:created_at, :credit, :debit)
@accounts.pluck(:id, :credit)[0][1].to_f
@accounts.pluck(:id, :credit)[0][1]
@accounts.pluck(:id, :credit)[0]
@accounts.pluck(:id, :credit)
@accounts.first.collect(&:credit)
@accounts.first
@accounts.collect(&:credit)
@accounts.collect(:credit)
@accounts.pluck(:id)
@accounts.pluck(:credit)[0].to_f
@accounts.pluck(:credit)[0].to_s
@accounts.pluck(:credit)[0]
@accounts.pluck(:credit).to_s
@accounts.pluck(:credit).to_f
@accounts.pluck(:credit)
@accounts.first.pluck(:credit)
@accounts.first
@account.first
BigDecimal.new(@accounts.first)
BigDecimal.new(@accounts.first.credit)
@accounts.first
@accounts.first.credit
@accounts.first.credit.to_f
@accounts.first.pluck(:credit)
@accounts.first.credit
@accounts.first
@accounts.first.map{|x| p x}
@accounts.first
@accounts.pluck(:credit)
@accounts.first.pluck(:credit)
@accounts.first.pluck(:credit).to_f
@accounts.first.credit.to_f
@accounts.pluck(:credit)[0].to_f
@accounts.pluck(:credit)[0]
@accounts.pluck(:credit)
@accounts.first.credit
@accounts.first.credit.to_s
@accounts.first.credit.to_s.to_f.round(2)
@accounts.first.created_at
@accounts.first.debit
@accounts.first.credit
@accounts.first.id
@accounts.first
@accounts.first.credit
@accounts
@accounts.first.credit
@accounts.first
@accounts
q
@accounts
@account
q
@accounts
q
@account.debit
@account.credit
@account
User.find(account.user_id).email
User.find(account.user_id)
account.user_id
account
q
current_user
@account
q
account.user_id
account
@account.account
@account
@account.user_id
User.find(@account.user_id)
User.find(@account.user_id).user_email
User.find(@account.user_id).email
@account
current_user
q
UserMailer.mail(user: self).transaction_email.deliver_now
UserMailer.with(user: self).transaction_email.deliver_now
q
Thread.current[:user].id
Thread.current[:user]
user
Thread.current
current
q
current_user
q
current_user
params
q
self
q
self
c
q
n
user
accountuser
account
exit
User.find
self.current_user
self.user_id
self
current_user
user.instance_id
User
user
current_user
c
debit.present? && debit > (Account.sum(:credit) - Account.sum(:debit))
debit.present? && debit > Account.sum(:credit)
debit.present?
credit.present?
debit.present?
debit
